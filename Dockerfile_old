ARG ALPINE_VERSION=3.8

FROM elixir:1.7.2-alpine AS builder
# FROM elixir:alpine
ARG APP_NAME=bc2
ARG APP_VSN=0.0.1
ARG PHOENIX_SUBDIR=.
ARG RELEASE_ENV=staging
# ARG PORT=4000
ENV MIX_ENV=${RELEASE_ENV} REPLACE_OS_VARS=true TERM=xterm
WORKDIR /opt/app

RUN apk update \
    && apk --no-cache --update add nodejs build-base file imagemagick\
    && mix local.rebar --force \
    && mix local.hex --force

COPY . .

RUN mix do deps.get, deps.compile, compile

RUN cd ${PHOENIX_SUBDIR}/assets && \
    npm install && \
    cd .. && \
    mix phx.digest;

RUN MIX_ENV=${RELEASE_ENV} mix release --env=${RELEASE_ENV} --verbose \
    && mv _build/${RELEASE_ENV}/rel/${APP_NAME} /opt/release \
    && mv /opt/release/bin/${APP_NAME} /opt/release/bin/start_server


# FROM alpine:latest
FROM alpine:${ALPINE_VERSION}

RUN apk update && apk --no-cache --update add bash openssl-dev

# ENV PORT=${PORT} MIX_ENV=${RELEASE_ENV} REPLACE_OS_VARS=true
ENV MIX_ENV=${RELEASE_ENV} REPLACE_OS_VARS=true

WORKDIR /opt/app

# EXPOSE ${PORT}

COPY --from=0 /opt/release .

CMD ["/opt/app/bin/start_server", "foreground"]